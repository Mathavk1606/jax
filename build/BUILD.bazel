# Copyright 2024 The Jax Authors. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ==============================================================================

load("@python//:defs.bzl", "compile_pip_requirements")
load("@python_version_repo//:py_version.bzl", "REQUIREMENTS")
load("//jaxlib:jax.bzl", "all_py_deps")

licenses(["notice"])

compile_pip_requirements(
    name = "requirements",
    data = [
        "gpu-test-requirements.txt",
        "test-requirements.txt",
    ],
    extra_args = [
        "--allow-unsafe",
        "--build-isolation",
        "--rebuild",
    ],
    generate_hashes = True,
    requirements_in = "requirements.in",
    requirements_txt = REQUIREMENTS,
)

compile_pip_requirements(
    name = "tpu_requirements",
    data = [
        "test-requirements.txt",
        "tpu-test-requirements.txt",
    ],
    extra_args = [
        "--allow-unsafe",
        "--build-isolation",
        "--rebuild",
    ],
    generate_hashes = True,
    requirements_in = "tpu_requirements.in",
    requirements_txt = REQUIREMENTS,
)

compile_pip_requirements(
    name = "requirements_nightly",
    data = [
        "gpu-test-requirements.txt",
        "test-requirements.txt",
    ],
    extra_args = [
        "--allow-unsafe",
        "--build-isolation",
        "--extra-index-url=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple",
        "--pre",
        "--upgrade",
    ],
    generate_hashes = False,
    requirements_in = "requirements.in",
    requirements_txt = REQUIREMENTS,
)

compile_pip_requirements(
    name = "nightly_tpu_requirements",
    data = [
        "test-requirements.txt",
        "tpu-test-requirements.txt",
    ],
    extra_args = [
        "--allow-unsafe",
        "--build-isolation",
        "--extra-index-url=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple",
        "-f https://storage.googleapis.com/jax-releases/libtpu_releases.html",
        "--pre",
        "--upgrade",
    ],
    generate_hashes = False,
    requirements_in = "tpu_requirements.in",
    requirements_txt = REQUIREMENTS,
)

compile_pip_requirements(
    name = "oldest_tpu_requirements",
    data = [
        "oldest-tpu-test-requirements.txt",
        "test-requirements.txt",
    ],
    extra_args = [
        "--allow-unsafe",
        "--build-isolation",
        "--extra-index-url=https://pypi.anaconda.org/scientific-python-nightly-wheels/simple",
        "-f https://storage.googleapis.com/jax-releases/libtpu_releases.html",
        "--pre",
        "--upgrade",
    ],
    generate_hashes = False,
    requirements_in = "oldest_tpu_requirements.in",
    requirements_txt = REQUIREMENTS,
)

compile_pip_requirements(
    name = "requirements_dev",
    data = [
        "gpu-test-requirements.txt",
        "test-requirements.txt",
    ],
    extra_args = [
        "--allow-unsafe",
        "--build-isolation",
        "--upgrade",
        "--rebuild",
    ],
    generate_hashes = False,
    requirements_in = "requirements.in",
    requirements_txt = REQUIREMENTS,
)

py_library(
    name = "all_py_deps",
    deps = all_py_deps(["zstandard"]),
)
